{"version":3,"file":"static/js/256.74295890.chunk.js","mappings":"0bA4Be,SAASA,IACtB,IAAQC,GAAiBC,EAAAA,EAAAA,KAAjBD,aAEFE,GAAeC,EAAAA,EAAAA,KAEbC,GAAUC,EAAAA,EAAAA,MAAVD,MAER,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAOG,EAAP,KAAaC,EAAb,KAEA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAUC,EAAAA,EAAAA,cAAW,iBAAC,6GAEDC,EAAAA,EAAAA,IAAU,iBAAkB,CACjDC,OAAQ,CAAEZ,MAAAA,KAHY,OAElBa,EAFkB,OAMpBf,EAAagB,SACfR,EAAQO,EAASE,KAAKV,MAPA,gDAUxBW,QAAQT,MAAR,MACAC,EAAS,KAAMS,SAXS,yDAazB,CAACnB,EAAcE,IAEZkB,GAAiBR,EAAAA,EAAAA,cAAW,iBAAC,6GAERC,EAAAA,EAAAA,IAAU,yBAA0B,CACzDC,OAAQ,CAAEZ,MAAAA,KAHmB,OAEzBa,EAFyB,OAM3Bf,EAAagB,SACfV,EAAeS,EAASE,KAAKZ,aAPA,gDAU/Ba,QAAQT,MAAR,MAV+B,yDAYhC,CAACT,EAAcE,IAOlB,OALAmB,EAAAA,EAAAA,YAAU,WACRV,IACAS,GACD,GAAE,CAACA,EAAgBT,KAGlB,SAAC,IAAD,CAAMT,MAAM,qBAAZ,UACE,UAAC,IAAD,CAAWoB,UAAUxB,GAAuB,KAA5C,WACE,SAAC,IAAD,CACEyB,QAAQ,eACRC,MAAO,CACL,CAAEC,KAAM,YAAaC,KAAMC,EAAAA,GAAAA,MAC3B,CAAEF,KAAM,OAAQC,KAAMC,EAAAA,GAAAA,KAAAA,MACtB,CAAEF,MAAMG,EAAAA,EAAAA,GAAa1B,OAIxBK,IACC,UAAC,IAAD,YACE,SAAC,KAAD,CAAcA,KAAMA,KAEpB,UAAC,IAAD,CAAKsB,GAAI,CAAEC,EAAG,CAAEC,GAAI,EAAGC,GAAI,IAA3B,WACE,SAAC,IAAD,CAAYC,QAAQ,KAAKJ,GAAI,CAAEK,GAAI,GAAnC,SACG3B,EAAK4B,eAGR,SAAC,IAAD,CAAUC,SAAU7B,EAAK8B,QAEzB,UAAC,IAAD,CAAKR,GAAI,CAAES,GAAI,GAAf,WACE,SAAC,IAAD,KACA,SAAC,KAAD,CAAc/B,KAAMA,KACpB,SAAC,IAAD,QAGF,UAAC,IAAD,CAAKsB,GAAI,CAAEU,QAAS,OAAQL,GAAI,GAAhC,WACE,SAAC,IAAD,CAAYD,QAAQ,KAApB,uBACA,UAAC,IAAD,CAAYA,QAAQ,YAAYJ,GAAI,CAAEW,MAAO,iBAA7C,cACIjC,EAAKkC,SAASC,OADlB,WAKF,SAAC,KAAD,CAAqBnC,KAAMA,KAE3B,SAAC,IAAD,CAAKsB,GAAI,CAAEK,GAAI,EAAGS,GAAI,EAAGJ,QAAS,OAAQK,eAAgB,YAA1D,UACE,SAAC,IAAD,CAAYC,MAAO,EAAGL,MAAM,eAG9B,SAAC,KAAD,WAKJjC,IAASE,IAAS,SAAC,KAAD,IAEnBA,IAAS,UAAC,IAAD,CAAYwB,QAAQ,KAApB,iBAA8BxB,EAA9B,QAEV,SAAC,KAAD,CAAgBqC,MAAOzC,QAI9B,C","sources":["pages/dashboard/BlogPost.js"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\r\nimport { sentenceCase } from 'change-case';\r\nimport { useParams } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Card, Divider, Container, Typography, Pagination } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Markdown from '../../components/Markdown';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { SkeletonPost } from '../../components/skeleton';\r\n// sections\r\nimport {\r\n  BlogPostHero,\r\n  BlogPostTags,\r\n  BlogPostRecent,\r\n  BlogPostCommentList,\r\n  BlogPostCommentForm,\r\n} from '../../sections/@dashboard/blog';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BlogPost() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const isMountedRef = useIsMountedRef();\r\n\r\n  const { title } = useParams();\r\n\r\n  const [recentPosts, setRecentPosts] = useState([]);\r\n\r\n  const [post, setPost] = useState(null);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const getPost = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/blog/post', {\r\n        params: { title },\r\n      });\r\n\r\n      if (isMountedRef.current) {\r\n        setPost(response.data.post);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    }\r\n  }, [isMountedRef, title]);\r\n\r\n  const getRecentPosts = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/blog/posts/recent', {\r\n        params: { title },\r\n      });\r\n\r\n      if (isMountedRef.current) {\r\n        setRecentPosts(response.data.recentPosts);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [isMountedRef, title]);\r\n\r\n  useEffect(() => {\r\n    getPost();\r\n    getRecentPosts();\r\n  }, [getRecentPosts, getPost]);\r\n\r\n  return (\r\n    <Page title=\"Blog: Post Details\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Post Details\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'Blog', href: PATH_DASHBOARD.blog.root },\r\n            { name: sentenceCase(title) },\r\n          ]}\r\n        />\r\n\r\n        {post && (\r\n          <Card>\r\n            <BlogPostHero post={post} />\r\n\r\n            <Box sx={{ p: { xs: 3, md: 5 } }}>\r\n              <Typography variant=\"h6\" sx={{ mb: 5 }}>\r\n                {post.description}\r\n              </Typography>\r\n\r\n              <Markdown children={post.body} />\r\n\r\n              <Box sx={{ my: 5 }}>\r\n                <Divider />\r\n                <BlogPostTags post={post} />\r\n                <Divider />\r\n              </Box>\r\n\r\n              <Box sx={{ display: 'flex', mb: 2 }}>\r\n                <Typography variant=\"h4\">Comments</Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ color: 'text.disabled' }}>\r\n                  ({post.comments.length})\r\n                </Typography>\r\n              </Box>\r\n\r\n              <BlogPostCommentList post={post} />\r\n\r\n              <Box sx={{ mb: 5, mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Pagination count={8} color=\"primary\" />\r\n              </Box>\r\n\r\n              <BlogPostCommentForm />\r\n            </Box>\r\n          </Card>\r\n        )}\r\n\r\n        {!post && !error && <SkeletonPost />}\r\n\r\n        {error && <Typography variant=\"h6\">404 {error}!</Typography>}\r\n\r\n        <BlogPostRecent posts={recentPosts} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["BlogPost","themeStretch","useSettings","isMountedRef","useIsMountedRef","title","useParams","useState","recentPosts","setRecentPosts","post","setPost","error","setError","getPost","useCallback","axios","params","response","current","data","console","message","getRecentPosts","useEffect","maxWidth","heading","links","name","href","PATH_DASHBOARD","sentenceCase","sx","p","xs","md","variant","mb","description","children","body","my","display","color","comments","length","mt","justifyContent","count","posts"],"sourceRoot":""}