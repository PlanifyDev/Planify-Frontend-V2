{"version":3,"file":"static/js/337.d29a135a.chunk.js","mappings":"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","sources":["sections/@dashboard/user/account/AccountBillingPaymentMethod.js","sections/@dashboard/user/account/AccountBilling.js","sections/@dashboard/user/account/AccountChangePassword.js","sections/@dashboard/user/account/AccountGeneral.js","sections/@dashboard/user/account/AccountSocialLinks.js","pages/dashboard/UserAccount.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Card, Stack, Paper, Button, Collapse, TextField, Typography, IconButton } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// components\r\nimport Image from '../../../../components/Image';\r\nimport Iconify from '../../../../components/Iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAccountBillingPaymentMethod.propTypes = {\r\n  cards: PropTypes.array,\r\n  isOpen: PropTypes.bool,\r\n  onOpen: PropTypes.func,\r\n  onCancel: PropTypes.func,\r\n};\r\n\r\nexport default function AccountBillingPaymentMethod({ cards, isOpen, onOpen, onCancel }) {\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <Typography variant=\"overline\" sx={{ mb: 3, display: 'block', color: 'text.secondary' }}>\r\n        Payment Method\r\n      </Typography>\r\n\r\n      <Stack spacing={2} direction={{ xs: 'column', md: 'row' }}>\r\n        {cards.map((card) => (\r\n          <Paper\r\n            key={card.id}\r\n            sx={{\r\n              p: 3,\r\n              width: 1,\r\n              position: 'relative',\r\n              border: (theme) => `solid 1px ${theme.palette.grey[500_32]}`,\r\n            }}\r\n          >\r\n            <Image\r\n              alt=\"icon\"\r\n              src={\r\n                card.cardType === 'master_card'\r\n                  ? 'https://minimal-assets-api.vercel.app/assets/icons/ic_mastercard.svg'\r\n                  : 'https://minimal-assets-api.vercel.app/assets/icons/ic_visa.svg'\r\n              }\r\n              sx={{ mb: 1, maxWidth: 36 }}\r\n            />\r\n            <Typography variant=\"subtitle2\">{card.cardNumber}</Typography>\r\n            <IconButton\r\n              sx={{\r\n                top: 8,\r\n                right: 8,\r\n                position: 'absolute',\r\n              }}\r\n            >\r\n              <Iconify icon={'eva:more-vertical-fill'} width={20} height={20} />\r\n            </IconButton>\r\n          </Paper>\r\n        ))}\r\n      </Stack>\r\n\r\n      <Box sx={{ mt: 3 }}>\r\n        <Button size=\"small\" startIcon={<Iconify icon={'eva:plus-fill'} />} onClick={onOpen}>\r\n          Add new card\r\n        </Button>\r\n      </Box>\r\n\r\n      <Collapse in={isOpen}>\r\n        <Box\r\n          sx={{\r\n            padding: 3,\r\n            marginTop: 3,\r\n            borderRadius: 1,\r\n            bgcolor: 'background.neutral',\r\n          }}\r\n        >\r\n          <Stack spacing={3}>\r\n            <Typography variant=\"subtitle1\">Add new card</Typography>\r\n\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n              <TextField fullWidth label=\"Name on card\" />\r\n\r\n              <TextField fullWidth label=\"Card number\" />\r\n            </Stack>\r\n\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n              <TextField fullWidth label=\"Expiration date\" placeholder=\"MM/YY\" />\r\n\r\n              <TextField fullWidth label=\"Cvv\" />\r\n            </Stack>\r\n\r\n            <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1.5}>\r\n              <Button color=\"inherit\" variant=\"outlined\" onClick={onCancel}>\r\n                Cancel\r\n              </Button>\r\n              <LoadingButton type=\"submit\" variant=\"contained\" onClick={onCancel}>\r\n                Save Change\r\n              </LoadingButton>\r\n            </Stack>\r\n          </Stack>\r\n        </Box>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n// @mui\r\nimport { Box, Grid, Card, Button, Typography, Stack } from '@mui/material';\r\n//\r\nimport AccountBillingAddressBook from './AccountBillingAddressBook';\r\nimport AccountBillingPaymentMethod from './AccountBillingPaymentMethod';\r\nimport AccountBillingInvoiceHistory from './AccountBillingInvoiceHistory';\r\nimport useAuth from '../../../../hooks/useAuth';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAccountBilling.propTypes = {\r\n  addressBook: PropTypes.array,\r\n  cards: PropTypes.array,\r\n  invoices: PropTypes.array,\r\n};\r\n\r\n\r\nexport default function AccountBilling({ cards, addressBook, invoices }) {\r\n  const [open, setOpen] = useState(false);\r\n  const { user } = useAuth();\r\n  console.log('user.plan', user);\r\n\r\n\r\n  return (\r\n    <Grid container spacing={5}>\r\n      <Grid item xs={12} md={8}>\r\n        <Stack spacing={3}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Typography variant=\"overline\" sx={{ mb: 3, display: 'block', color: 'text.secondary' }}>\r\n              Your Plan\r\n            </Typography>\r\n            <Typography variant=\"h4\">{ user?.user_plan.toUpperCase() || ''}</Typography>\r\n            <Box\r\n              sx={{\r\n                mt: { xs: 2, sm: 0 },\r\n                position: { sm: 'absolute' },\r\n                top: { sm: 24 },\r\n                right: { sm: 24 },\r\n              }}\r\n            >\r\n              <Button size=\"small\" color=\"inherit\" variant=\"outlined\" sx={{ mr: 1 }}>\r\n                Cancel plan\r\n              </Button>\r\n              <Button size=\"small\" variant=\"outlined\">\r\n                Upgrade plan\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n\r\n          <AccountBillingPaymentMethod\r\n            cards={cards}\r\n            isOpen={open}\r\n            onOpen={() => setOpen(!open)}\r\n            onCancel={() => setOpen(false)}\r\n          />\r\n\r\n        </Stack>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={4}>\r\n        {/* <AccountBillingInvoiceHistory invoices={invoices} /> */}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\n// import axios from 'axios';\r\n\r\nimport { useSnackbar } from 'notistack';\r\nimport { accessToken } from 'mapbox-gl';\r\nimport { User } from '@auth0/auth0-spa-js';\r\n// form\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\n// @mui\r\nimport { Stack, Card } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// components\r\nimport { FormProvider, RHFTextField } from '../../../../components/hook-form';\r\nimport axios from '../../../../utils/axios';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountChangePassword() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const ChangePassWordSchema = Yup.object().shape({\r\n    oldPassword: Yup.string().required('Old Password is required'),\r\n    newPassword: Yup.string().min(6, 'Password must be at least 6 characters').required('New Password is required'),\r\n    confirmNewPassword: Yup.string().oneOf([Yup.ref('newPassword'), null], 'Passwords must match'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    oldPassword: '',\r\n    newPassword: '',\r\n    confirmNewPassword: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(ChangePassWordSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      \r\n      const accessToken = window.localStorage.getItem('accessToken');\r\n    \r\n      axios.defaults.headers.common = {\r\n        'authorization': `${accessToken}`\r\n      };\r\n      const uid = JSON.parse(window.localStorage.getItem('user')).id\r\n      axios.put(`/auth/update-all/${uid}`, {oldPassword: data.oldPassword, password: data.newPassword})\r\n      .then((res) => {      \r\n        enqueueSnackbar('Password changed successfully!');\r\n\r\n    })\r\n      .catch((err) => {\r\n        enqueueSnackbar(err.error, { variant: 'error' });\r\n\r\n      })\r\n      .finally((err) => {\r\n        reset();\r\n      })\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ p: 3 , maxWidth: 800}}>\r\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack spacing={3} alignItems=\"flex-mid\">\r\n          <RHFTextField name=\"oldPassword\" type=\"password\" label=\"Old Password\" />\r\n\r\n          <RHFTextField name=\"newPassword\" type=\"password\" label=\"New Password\" />\r\n\r\n          <RHFTextField name=\"confirmNewPassword\" type=\"password\" label=\"Confirm New Password\" />\r\n          <center>\r\n          <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n            Save Changes\r\n          </LoadingButton>\r\n          </center>\r\n\r\n          \r\n        </Stack>\r\n      </FormProvider>\r\n    </Card>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useCallback } from 'react';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { Box, Grid, Card, Stack, Typography } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// hooks\r\nimport useAuth from '../../../../hooks/useAuth';\r\n// utils\r\nimport { fData } from '../../../../utils/formatNumber';\r\n// _mock\r\nimport { countries } from '../../../../_mock';\r\n// components\r\nimport { FormProvider, RHFSwitch, RHFSelect, RHFTextField, RHFUploadAvatar } from '../../../../components/hook-form';\r\n\r\nimport axios from '../../../../utils/axios';\r\nimport { PATH_AUTH } from '../../../../routes/paths';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountGeneral() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { user } = useAuth();\r\n\r\n  const UpdateUserSchema = Yup.object().shape({\r\n    email: Yup.string().required('Name is required'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    firstname: user?.firstname || '',\r\n    lastname: user?.lastname || '',\r\n    email: user?.email || '',\r\n    image_url: user?.photoURL || 'https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcSUe2eaB9QYVkoJORkwnG2yfpPRqpqvRyUkWXOfvLOirm1mudvx',\r\n    phoneNumber: user?.phoneNumber || '',\r\n    country: user?.country || '',\r\n    // address: user?.address || '',\r\n    // state: user?.state || '',\r\n    // city: user?.city || '',\r\n    // zipCode: user?.zipCode || '',\r\n    // about: user?.about || '',\r\n    // isPublic: user?.isPublic || false,\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(UpdateUserSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    const accessToken = window.localStorage.getItem('accessToken');\r\n    \r\n    axios.defaults.headers.common = {\r\n      'authorization': `${accessToken}`\r\n    };\r\n\r\n    const id = JSON.parse(window.localStorage.getItem('user')).id\r\n\r\n    axios.put(`/auth/update-all/${id}`, data)\r\n      .then((res) => {\r\n        enqueueSnackbar('Data edit success!');\r\n        // const newAccessToken = res.data.jwt;\r\n        // window.localStorage.setItem('accessToken', newAccessToken)\r\n        // navigate(PATH_DASHBOARD.root, { replace: true });\r\n      })\r\n\r\n      .catch((error) => {\r\n        if (error.response.status === 401) {\r\n          enqueueSnackbar('Unauthorized!', { variant: 'error' });\r\n\r\n          window.localStorage.removeItem('accessToken').then((res) => {\r\n            // navigate(PATH_AUTH.login, { replace: true });\r\n          });\r\n        }\r\n        if (error.response.status === 400) {\r\n          enqueueSnackbar('Wrong Code!', { variant: 'error' });\r\n        }\r\n      })\r\n      .finally(() => {\r\n        reset();\r\n      });\r\n      \r\n\r\n  };\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n\r\n      if (file) {\r\n        setValue(\r\n          'photoURL',\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ py: 10, px: 3, textAlign: 'center' }}>\r\n            <RHFUploadAvatar\r\n              name=\"image_url\"\r\n              accept=\"image/*\"\r\n              maxSize={3145728}\r\n              onDrop={handleDrop}\r\n              helperText={\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  sx={{\r\n                    mt: 2,\r\n                    mx: 'auto',\r\n                    display: 'block',\r\n                    textAlign: 'center',\r\n                    color: 'text.secondary',\r\n                  }}\r\n                >\r\n                  Allowed *.jpeg, *.jpg, *.png, *.gif\r\n                  <br /> max size of {fData(3145728)}\r\n                </Typography>\r\n              }\r\n            />\r\n\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={8}>\r\n          <Card sx={{ p: 3 }} style={{height: '100%', paddingTop: '62px'}}>\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                rowGap: 3,\r\n                columnGap: 2,\r\n                gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\r\n              }}\r\n            >\r\n              <RHFTextField name=\"firstname\" label=\"First Name\" />\r\n              <RHFTextField name=\"lastname\" label=\"Last Name\" />\r\n              <RHFTextField name=\"email\" label=\"Email Address\" />\r\n\r\n              <RHFSelect name=\"country\" label=\"Country\" placeholder=\"Country\">\r\n                <option value=\"\" />\r\n                {countries.map((option) => (\r\n                  <option key={option.code} value={option.label}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </RHFSelect>\r\n\r\n            </Box>\r\n\r\n            <Stack spacing={3} alignItems=\"flex-mid\" sx={{ mt: 3 }}>\r\n\r\n            <center>\r\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                Save Changes\r\n              </LoadingButton>\r\n            </center>\r\n            </Stack>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useSnackbar } from 'notistack';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\n// @mui\r\nimport { Stack, Card, InputAdornment } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\nimport { FormProvider, RHFTextField } from '../../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SOCIAL_LINKS = [\r\n  {\r\n    value: 'facebookLink',\r\n    icon: <Iconify icon={'eva:facebook-fill'} width={24} height={24} />,\r\n  },\r\n  {\r\n    value: 'instagramLink',\r\n    icon: <Iconify icon={'ant-design:instagram-filled'} width={24} height={24} />,\r\n  },\r\n  {\r\n    value: 'linkedinLink',\r\n    icon: <Iconify icon={'eva:linkedin-fill'} width={24} height={24} />,\r\n  },\r\n  {\r\n    value: 'twitterLink',\r\n    icon: <Iconify icon={'eva:twitter-fill'} width={24} height={24} />,\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAccountSocialLinks.propTypes = {\r\n  myProfile: PropTypes.shape({\r\n    facebookLink: PropTypes.string,\r\n    instagramLink: PropTypes.string,\r\n    linkedinLink: PropTypes.string,\r\n    twitterLink: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default function AccountSocialLinks({ myProfile }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const defaultValues = {\r\n    facebookLink: myProfile.facebookLink,\r\n    instagramLink: myProfile.instagramLink,\r\n    linkedinLink: myProfile.linkedinLink,\r\n    twitterLink: myProfile.twitterLink,\r\n  };\r\n\r\n  const methods = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      enqueueSnackbar('Update success!');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack spacing={3} alignItems=\"flex-end\">\r\n          {SOCIAL_LINKS.map((link) => (\r\n            <RHFTextField\r\n              key={link.value}\r\n              name={link.value}\r\n              InputProps={{\r\n                startAdornment: <InputAdornment position=\"start\">{link.icon}</InputAdornment>,\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n            Save Changes\r\n          </LoadingButton>\r\n        </Stack>\r\n      </FormProvider>\r\n    </Card>\r\n  );\r\n}\r\n","import { capitalCase } from 'change-case';\r\n// @mui\r\nimport { Container, Tab, Box, Tabs } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useTabs from '../../hooks/useTabs';\r\nimport useSettings from '../../hooks/useSettings';\r\n// _mock_\r\nimport { _userPayment, _userAddressBook, _userInvoices, _userAbout } from '../../_mock';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Iconify from '../../components/Iconify';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\n// sections\r\nimport {\r\n  AccountGeneral,\r\n  AccountBilling,\r\n  AccountSocialLinks,\r\n  AccountNotifications,\r\n  AccountChangePassword,\r\n} from '../../sections/@dashboard/user/account';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserAccount() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const { currentTab, onChangeTab } = useTabs('general');\r\n\r\n  const ACCOUNT_TABS = [\r\n    {\r\n      value: 'general',\r\n      icon: <Iconify icon={'ic:round-account-box'} width={20} height={20} />,\r\n      component: <AccountGeneral />,\r\n    },\r\n    {\r\n      value: 'billing',\r\n      icon: <Iconify icon={'ic:round-receipt'} width={20} height={20} />,\r\n      component: <AccountBilling cards={_userPayment} addressBook={_userAddressBook} invoices={_userInvoices} />,\r\n    },\r\n    {\r\n      value: 'change_password',\r\n      icon: <Iconify icon={'ic:round-vpn-key'} width={20} height={20} />,\r\n      component: <AccountChangePassword />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Page title=\"User: Account Settings\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Account\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'User', href: PATH_DASHBOARD.user.root },\r\n            { name: 'Account Settings' },\r\n          ]}\r\n        />\r\n\r\n        <Tabs\r\n          allowScrollButtonsMobile\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          value={currentTab}\r\n          onChange={onChangeTab}\r\n        >\r\n          {ACCOUNT_TABS.map((tab) => (\r\n            <Tab disableRipple key={tab.value} label={capitalCase(tab.value)} icon={tab.icon} value={tab.value} />\r\n          ))}\r\n        </Tabs>\r\n\r\n        <Box sx={{ mb: 5 }} />\r\n\r\n        {ACCOUNT_TABS.map((tab) => {\r\n          const isMatched = tab.value === currentTab;\r\n          return isMatched && <Box key={tab.value}>{tab.component}</Box>;\r\n        })}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["AccountBillingPaymentMethod","cards","isOpen","onOpen","onCancel","sx","p","variant","mb","display","color","spacing","direction","xs","md","map","card","width","position","border","theme","palette","grey","Image","alt","src","cardType","maxWidth","cardNumber","IconButton","top","right","icon","height","id","mt","size","startIcon","onClick","Collapse","in","padding","marginTop","borderRadius","bgcolor","sm","TextField","fullWidth","label","placeholder","justifyContent","type","AccountBilling","addressBook","invoices","useState","open","setOpen","user","useAuth","console","log","Grid","container","item","user_plan","toUpperCase","mr","AccountChangePassword","enqueueSnackbar","useSnackbar","ChangePassWordSchema","Yup","shape","oldPassword","required","newPassword","min","confirmNewPassword","oneOf","methods","useForm","resolver","yupResolver","defaultValues","reset","handleSubmit","isSubmitting","formState","onSubmit","data","accessToken","window","localStorage","getItem","axios","uid","JSON","parse","password","then","res","catch","err","error","finally","alignItems","name","loading","AccountGeneral","UpdateUserSchema","email","firstname","lastname","image_url","photoURL","phoneNumber","country","setValue","response","status","removeItem","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","py","px","textAlign","accept","maxSize","onDrop","helperText","mx","fData","style","paddingTop","rowGap","columnGap","gridTemplateColumns","value","countries","option","code","UserAccount","themeStretch","useSettings","useTabs","currentTab","onChangeTab","ACCOUNT_TABS","component","_userPayment","_userAddressBook","_userInvoices","Page","title","Container","HeaderBreadcrumbs","heading","links","href","PATH_DASHBOARD","Tabs","allowScrollButtonsMobile","scrollButtons","onChange","tab","Tab","disableRipple","capitalCase"],"sourceRoot":""}